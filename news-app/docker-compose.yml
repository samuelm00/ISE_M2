version: '3.8'
services:
  sql:
    platform: linux/x86_64
    image: mysql:8.0
    hostname: mysql
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=news_app
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - '3306:3306'
    volumes:
      - db:/mysql-data

  adminer:
    image: adminer:4.8.1
    restart: always
    ports:
      - 8282:8080
    depends_on:
      - sql

  mongo:
    image: mongo
    restart: always
    hostname: mongo
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=news_app
    ports:
      - '27017:27017'

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: user
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://user:password@mongo:27017/
    depends_on:
      - mongo

  api:
    build:
      context: ./
      dockerfile: ./apps/server/Dockerfile
    container_name: api
    hostname: 'api'
    restart: always
    expose:
      - 3333
    ports:
      - '3333:3333'
    environment:
      WAIT_HOSTS: mysql:3306, mongo:27017
    depends_on:
      - sql

  frontend:
    build:
      context: ./
      dockerfile: ./apps/frontend/Dockerfile
    container_name: frontend
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      - api
volumes:
  db:
    driver: local
